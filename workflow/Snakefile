import os
from pathlib import Path


configfile: "config/config.yml"
SAMPLES = expand(config["samples"]) 
outdir = os.path.join(config["processing_dir"],str(config["experiment"]))
fragmentsize=config["fragment_size"]


#local functions - path to helper functions needs to be added to the sys path, otherwise import won't find the file
rootpath = os.path.join("workflow/scripts")
sys.path.append(rootpath)
cwd=os.getcwd()    

import VIS_helper_functions as vhf #functions to make snakemake pipeline leaner

#inmport rules
include: config["detection"]
include: config["functional_genomics"]
include: config["quality_control"]

#target rule        
rule all:
	input: 
		#detection
		expand(f"{outdir}/final/localization/ExactInsertions_{{sample}}.bed", sample=SAMPLES),
		f"{outdir}/final/localization/Heatmap_Insertion_Chr.png",
		f"{outdir}/final/localization/Insertion_length.png",
		
		#functional genomics
		expand(f"{outdir}/final/functional_genomics/Functional_distances_to_Insertions_{{sample}}.bed", sample=SAMPLES),
		#expand(f"{outdir}/final/functional_genomics/Plot_Distance_to_Genes_{fragmentsize}_{{sample}}.png", sample=SAMPLES),
		
		#quality control
		expand(f"{outdir}/final/qc/mapq/{{sample}}_mapq_heatmap_image.png", sample=SAMPLES),
		expand(f"{outdir}/final/qc/Fragmentation/Insertions/insertions_{fragmentsize}_{{sample}}", sample=SAMPLES),
		expand(f"{outdir}/final/qc/Fragmentation/Longest_Interval/{{sample}}/", sample=SAMPLES),
		f"{outdir}/final/qc/multiqc_report.html",
		
		#process
		f"{outdir}/config_settings.yml"
		
